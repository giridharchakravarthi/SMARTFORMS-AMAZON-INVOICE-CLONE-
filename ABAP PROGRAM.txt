PARAMETER S_VBELN TYPE VBAK-VBELN.
TYPES : BEGIN OF TY,
        SNO TYPE SY-TABIX,
        VBELN TYPE VBAK-VBELN,
        AUDAT TYPE VBAK-AUDAT,
        KUNNR TYPE VBAK-KUNNR,
        KORT01 TYPE KNA1-ORT01,
        KADRNR TYPE KNA1-ADRNR,
        REGIO TYPE KNA1-REGIO,
        BUKRS_VF TYPE VBAK-BUKRS_VF,
        BORT01 TYPE T001-ORT01,
        BADRNR TYPE T001-ADRNR,
        POSNR TYPE VBAP-POSNR,
        MATNR TYPE VBAP-MATNR,
        MAKTX TYPE MAKT-MAKTX,
        KWMENG TYPE VBAP-KWMENG,
        MEINS TYPE VBAP-MEINS,
        NETWR TYPE VBAP-NETWR,
        END OF TY.
DATA : WA_SS TYPE TY.
DATA : WA TYPE TY,IT TYPE TABLE OF TY.
TYPES : BEGIN OF TY_VBAK,
        VBELN TYPE VBAK-VBELN,
        AUDAT TYPE VBAK-AUDAT,
        KUNNR TYPE VBAK-KUNNR,
        BUKRS_VF TYPE VBAK-BUKRS_VF,
        END OF TY_VBAK.
DATA : WA_VBAK TYPE TY_VBAK,
       IT_VBAK TYPE TABLE OF TY_VBAK.
TYPES : BEGIN OF TY_VBAP,
        VBELN TYPE VBAP-VBELN,
        POSNR TYPE VBAP-POSNR,
        MATNR TYPE VBAP-MATNR,
        KWMENG TYPE VBAP-KWMENG,
        MEINS TYPE VBAP-MEINS,
        NETWR TYPE VBAP-NETWR,
        END OF TY_VBAP.
DATA : WA_VBAP TYPE TY_VBAP,
       IT_VBAP TYPE TABLE OF TY_VBAP.
TYPES : BEGIN OF TY_KNA1,
        KUNNR TYPE KNA1-KUNNR,
        KORT01 TYPE KNA1-ORT01,
        KADRNR TYPE KNA1-ADRNR,
        REGIO TYPE KNA1-REGIO,
        END OF TY_KNA1.
DATA : WA_KNA1 TYPE TY_KNA1,
       IT_KNA1 TYPE TABLE OF TY_KNA1.
TYPES : BEGIN OF TY_T001,
        BUKRS TYPE T001-BUKRS,
        BORT01 TYPE T001-ORT01,
        BADRNR TYPE T001-ADRNR,
        END OF TY_T001.
DATA : WA_T001 TYPE TY_T001,
       IT_T001 TYPE TABLE OF TY_T001.
TYPES : BEGIN OF TY_MAKT,
        MATNR TYPE MAKT-MATNR,
        MAKTX TYPE MAKT-MAKTX,
        END OF TY_MAKT.
DATA :  WA_MAKT TYPE TY_MAKT,
        IT_MAKT TYPE TABLE OF TY_MAKT.
DATA :WA_A TYPE SPELL.
DATA : V2 TYPE VBAP-NETWR.
DATA : V3 TYPE RS38L_FNAM.
SELECT VBELN AUDAT KUNNR BUKRS_VF FROM VBAK INTO TABLE IT_VBAK WHERE VBELN = S_VBELN.
IF IT_VBAK IS NOT INITIAL.
SELECT VBELN POSNR MATNR KWMENG MEINS NETWR FROM VBAP INTO TABLE IT_VBAP FOR ALL ENTRIES IN IT_VBAK WHERE VBELN = IT_VBAK-VBELN.
SELECT KUNNR ORT01 ADRNR FROM KNA1 INTO TABLE IT_KNA1 FOR ALL ENTRIES IN IT_VBAK WHERE KUNNR = IT_VBAK-KUNNR.
SELECT BUKRS ORT01 ADRNR FROM T001 INTO TABLE IT_T001 FOR ALL ENTRIES IN IT_VBAK WHERE BUKRS = IT_VBAK-BUKRS_VF.
ENDIF.
IF IT_VBAP IS NOT INITIAL.
SELECT MATNR MAKTX FROM MAKT INTO TABLE IT_MAKT FOR ALL ENTRIES IN IT_VBAP WHERE MATNR = IT_VBAP-MATNR.
ENDIF.
LOOP AT IT_VBAP INTO WA_VBAP.
WA-SNO = SY-TABIX.
WA-VBELN = WA_VBAP-VBELN.
WA-POSNR = WA_VBAP-POSNR.
WA-MATNR = WA_VBAP-MATNR.
WA-KWMENG = WA_VBAP-KWMENG.
WA-MEINS = WA_VBAP-MEINS.
WA-NETWR = WA_VBAP-NETWR.
READ TABLE IT_MAKT INTO WA_MAKT WITH KEY MATNR = WA_VBAP-MATNR.
WA-MAKTX = WA_MAKT-MAKTX.
READ TABLE IT_VBAK INTO WA_VBAK WITH KEY VBELN = WA_VBAP-VBELN.
WA-AUDAT = WA_VBAK-AUDAT.
WA-KUNNR = WA_VBAK-KUNNR.
WA-BUKRS_VF = WA_VBAK-BUKRS_VF.
READ TABLE IT_KNA1 INTO WA_KNA1 WITH KEY KUNNR = WA_VBAK-KUNNR.
WA-KORT01 = WA_KNA1-KORT01.
WA-KADRNR = WA_KNA1-KADRNR.
WA-REGIO = WA_KNA1-REGIO.
READ TABLE IT_T001 INTO WA_T001 WITH KEY BUKRS = WA_VBAK-BUKRS_VF.
SELECT BUKRS ORT01 ADRNR FROM T001 INTO TABLE IT_T001 FOR ALL ENTRIES IN IT_VBAK WHERE BUKRS = IT_VBAK-BUKRS_VF.
WA-BORT01 = WA_T001-BORT01.
WA-BADRNR = WA_T001-BADRNR.
APPEND WA TO IT.
CLEAR WA.
ENDLOOP.
LOOP AT IT INTO WA.
V2 = V2 + WA-NETWR.
ENDLOOP.
CALL FUNCTION 'SPELL_AMOUNT'
 EXPORTING
   AMOUNT          = V2
   CURRENCY        = 'IN'
   LANGUAGE        = SY-LANGU
 IMPORTING
   IN_WORDS        = WA_A.
READ TABLE IT INTO WA INDEX 1.
WA_SS-SNO = WA-SNO.
WA_SS-VBELN = WA-VBELN.
WA_SS-AUDAT = WA-AUDAT.
WA_SS-KUNNR  = WA-KUNNR.
WA_SS-KORT01 = WA-KORT01.
WA_SS-KADRNR = WA-KADRNR.
WA_SS-REGIO = WA-REGIO.
WA_SS-BUKRS_VF = WA-BUKRS_VF.
WA_SS-BORT01 = WA-BORT01.
WA_SS-BADRNR = WA-BADRNR.
WA_SS-POSNR = WA-POSNR.
WA_SS-MATNR = WA-MATNR.
WA_SS-MAKTX = WA-MAKTX.
WA_SS-KWMENG = WA-KWMENG.
WA_SS-MEINS = WA-MEINS.
WA_SS-NETWR = WA-NETWR.
CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
  EXPORTING
    FORMNAME        = 'YGC_AMAZON'
 IMPORTING
   FM_NAME           = v3.
CALL FUNCTION v3
  EXPORTING
    WA_SI    = wa_ss
    WA_AM    = wa_a
    V1       = v2
  TABLES
    IT_S     = it.